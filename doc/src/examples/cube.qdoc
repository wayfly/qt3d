/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the Qt3D documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example quick3d/cube
    \title Cube Example

    \target Cube in QML
    \section2 Cube in QML

    The QML version of the cube example is very similar in
    structure to the C++ version, but much simpler.  As with all
    \l{Qt 3D Tutorials and Examples}{Qt 3D QML examples},
    we must include the \c QtQuick and \c Qt3D import.  Since we
    are using the stock Cube shape we must use \c Qt3D.Shapes import as well.

    We start by defining a viewport with a blue fill to make the cube stand
    out, and we also tell the viewport to use DirectRender:

    \snippet quick3d/cube/qml/Cube.qml 1

    A basic static rotation is applied, so that the cube appears in the
    window in a nice orientation initially.

    We then add an \l Cube object to load the cube model and
    apply the desired texture to it.

    \image cube-screenshot.png

    \l{Qt 3D Tutorials and Examples}{Return to Examples}.
*/
